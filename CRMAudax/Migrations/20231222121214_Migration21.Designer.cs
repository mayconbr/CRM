// <auto-generated />
using System;
using CRMAudax;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRMAudax.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231222121214_Migration21")]
    partial class Migration21
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "latin1");

            modelBuilder.Entity("CRMAudax.Models.TableAtividadesCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("atividade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dataAtividade")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("CRMAudax.Models.TableAutomoveis", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("ano")
                        .HasColumnType("longtext");

                    b.Property<string>("marca")
                        .HasColumnType("longtext");

                    b.Property<string>("modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("placa")
                        .HasColumnType("longtext");

                    b.Property<string>("valorFipe")
                        .HasColumnType("longtext");

                    b.Property<string>("valorOnus")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Automoveis");
                });

            modelBuilder.Entity("CRMAudax.Models.TableCartaoCNPJCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("dataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeCartaoCNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pathCartaoCNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipoCartaoCNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("CartoesCNPJ");
                });

            modelBuilder.Entity("CRMAudax.Models.TableCliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("RegiaoId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.Property<string>("celularSocio")
                        .HasColumnType("longtext");

                    b.Property<string>("cep")
                        .HasColumnType("longtext");

                    b.Property<string>("cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("complemento")
                        .HasColumnType("longtext");

                    b.Property<string>("cpfCnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("cpfSocio")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("dataFundacaoCedente")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("enderecoSocio")
                        .HasColumnType("longtext");

                    b.Property<string>("estado")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("faturamento")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("justificativaReprova")
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeResponsavel")
                        .HasColumnType("longtext");

                    b.Property<string>("nomeSocio")
                        .HasColumnType("longtext");

                    b.Property<string>("numero")
                        .HasColumnType("longtext");

                    b.Property<string>("parecer")
                        .HasColumnType("longtext");

                    b.Property<string>("pep")
                        .HasColumnType("longtext");

                    b.Property<string>("ramoAtividade")
                        .HasColumnType("longtext");

                    b.Property<string>("razaoSocialCedente")
                        .HasColumnType("longtext");

                    b.Property<string>("recorreu")
                        .HasColumnType("longtext");

                    b.Property<string>("referencia")
                        .HasColumnType("longtext");

                    b.Property<string>("rua")
                        .HasColumnType("longtext");

                    b.Property<string>("site")
                        .HasColumnType("longtext");

                    b.Property<string>("situacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("socio")
                        .HasColumnType("longtext");

                    b.Property<bool>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("tipoPessoa")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CRMAudax.Models.TableColunaKanban", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("ordem")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ColunasKanban");
                });

            modelBuilder.Entity("CRMAudax.Models.TableComite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<bool>("acaoPorBanco")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("acoesJudiciais")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("antecipacaoImoveis")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("apontamentoRestritivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("aumentoContratoCredito")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("aumentoProtesto")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("balanco")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("cartaoCnpj")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ccf")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("comprovanteEndereco")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("concentracaoSacados")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("confirmaNota")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("consultaAcimaMedia")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("consultaCnpj")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("contratoSocial")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("dataComite")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("empresaMesmoRamo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("endividamentoEmergencial")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("entregaMercadoria")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("execucaoFiscal")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("faturamento")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("faturamentoFiscal")
                        .HasColumnType("bigint");

                    b.Property<long>("faturamentoReal")
                        .HasColumnType("bigint");

                    b.Property<bool>("impostoRenda")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("inscricaoEstadual")
                        .HasColumnType("tinyint(1)");

                    b.Property<long?>("limite")
                        .HasColumnType("bigint");

                    b.Property<bool>("limiteAcima")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("maisempresas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("mudancaAtividade")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("mudancaSocios")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("observacoes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("pendenciaFinanceira")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("perfilProtesto")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("picoConsulta")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("protestoConsumo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("recisaoServico")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("recuperacaoJudicial")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("rgCpf")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("riscoPagamento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("socioAcao")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("socioApontamentoCPF")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("socioCheque")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("socioGarantiaAdd")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("socioHerdeiro")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("socioOstentador")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("socioProtesto")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("tempoFundacao")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tipoTitulos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("valorTotalNegativado")
                        .HasColumnType("bigint");

                    b.Property<long>("valorTotalProtestos")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Comites");
                });

            modelBuilder.Entity("CRMAudax.Models.TableComprovanteEnderecoCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("dataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeComprovanteRenda")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pathComprovanteEndereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipoComprovanteRenda")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ComprovantesEnderecos");
                });

            modelBuilder.Entity("CRMAudax.Models.TableContratoSocialCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("dataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeContratoSocialCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pathContratoSocialCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipoContratoSocialCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ContratosSociais");
                });

            modelBuilder.Entity("CRMAudax.Models.TableCpfRgCnh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("dataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeCpfRgCnhCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pathCpfRgCnhCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipoCpfRgCnhfCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("CnpjCpfs");
                });

            modelBuilder.Entity("CRMAudax.Models.TableCustosFixos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<long>("demaisCustos")
                        .HasColumnType("bigint");

                    b.Property<long>("folhaPagamento")
                        .HasColumnType("bigint");

                    b.Property<long>("valorAguaEnergia")
                        .HasColumnType("bigint");

                    b.Property<long>("valorAluguel")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("CustosFixos");
                });

            modelBuilder.Entity("CRMAudax.Models.TableDecisaoScore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CPFCNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClasseRisco")
                        .HasColumnType("longtext");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataScore")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Esclarecimento")
                        .HasColumnType("longtext");

                    b.Property<string>("ProbabilidadeInadimplencia")
                        .HasColumnType("longtext");

                    b.Property<long?>("QuantidadeProtestos")
                        .HasColumnType("bigint");

                    b.Property<string>("Score")
                        .HasColumnType("longtext");

                    b.Property<string>("UltimaOcorrenciaProtestos")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("ValorTotalProtestos")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("DecisaoScores");
                });

            modelBuilder.Entity("CRMAudax.Models.TableEndividamentoCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("dataContratacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeInstituicao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("prazoContratado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("situacaoContrato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("valorParcela")
                        .HasColumnType("bigint");

                    b.Property<long>("valorQuitacao")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("EndividamentoCedentes");
                });

            modelBuilder.Entity("CRMAudax.Models.TableEndividamentoSCR", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Dominio")
                        .HasColumnType("longtext");

                    b.Property<string>("Modalidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Subdominio")
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.Property<string>("ValorVencimento")
                        .HasColumnType("longtext");

                    b.Property<string>("carteiraVencer181a360dias")
                        .HasColumnType("longtext");

                    b.Property<string>("carteiraVencer31a60dias")
                        .HasColumnType("longtext");

                    b.Property<string>("carteiraVencer61a90dias")
                        .HasColumnType("longtext");

                    b.Property<string>("carteiraVencer91a180dias")
                        .HasColumnType("longtext");

                    b.Property<string>("carteiraVencerAte30diasVencidosAte14dias")
                        .HasColumnType("longtext");

                    b.Property<string>("carteiraVencerPrazoIndeterminado")
                        .HasColumnType("longtext");

                    b.Property<string>("codigoDoCliente")
                        .HasColumnType("longtext");

                    b.Property<string>("creditosaLiberar")
                        .HasColumnType("longtext");

                    b.Property<string>("dataBaseConsultada")
                        .HasColumnType("longtext");

                    b.Property<string>("dataInicioRelacionamento")
                        .HasColumnType("longtext");

                    b.Property<string>("limitesdeCredito")
                        .HasColumnType("longtext");

                    b.Property<string>("qtdeOperacoesDiscordancia")
                        .HasColumnType("longtext");

                    b.Property<string>("qtdeOperacoesSobJudice")
                        .HasColumnType("longtext");

                    b.Property<string>("responsabilidadeTotal")
                        .HasColumnType("longtext");

                    b.Property<string>("riscoTotal")
                        .HasColumnType("longtext");

                    b.Property<string>("vlrOperacoesDiscordancia")
                        .HasColumnType("longtext");

                    b.Property<string>("vlrOperacoesSobJudice")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("endividamentoSCR");
                });

            modelBuilder.Entity("CRMAudax.Models.TableEstoque", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("valorEstoque")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("CRMAudax.Models.TableFaturamentoCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("dataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeFaturamentoCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pathFaturamentoCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipoFaturamentoCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Faturamentos");
                });

            modelBuilder.Entity("CRMAudax.Models.TableFaturamentoFiscalCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("dataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeFaturamentoFiscalCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pathFaturamentoFiscalCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipoFaturamentoFiscalCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("FaturamentosFiscais");
                });

            modelBuilder.Entity("CRMAudax.Models.TableImpostoRendaCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("dataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nomeImpostoRendaCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("pathImpostoRendaCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipoImpostoRendaCedente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ImpostosRenda");
                });

            modelBuilder.Entity("CRMAudax.Models.TableMaquinasEquipamentos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("ano")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeEquipamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("valorFinanciado")
                        .HasColumnType("longtext");

                    b.Property<string>("valorMaquina")
                        .HasColumnType("longtext");

                    b.Property<string>("valorOnus")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("MaquinasEquipamentos");
                });

            modelBuilder.Entity("CRMAudax.Models.TableNFE", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("numero")
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("NFEs");
                });

            modelBuilder.Entity("CRMAudax.Models.TableOperacaoCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("dataOperacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nBordero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Operacoes");
                });

            modelBuilder.Entity("CRMAudax.Models.TableOrdemCartaoKanban", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<long>("ColunaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ordemCartao")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ColunaId");

                    b.ToTable("OrdemCartao");
                });

            modelBuilder.Entity("CRMAudax.Models.TableOrdemClienteKanban", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ColunaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ordemCard")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ColunaId");

                    b.ToTable("OrdemCliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableOrdemColunaKanban", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ColunaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ordemColuna")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ColunaId");

                    b.ToTable("OrdemColuna");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePendenciasDecisao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Agencia")
                        .HasColumnType("longtext");

                    b.Property<string>("Avalista")
                        .HasColumnType("longtext");

                    b.Property<string>("Banco")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Contagem")
                        .HasColumnType("bigint");

                    b.Property<string>("Contrato")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Modalidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Motivo")
                        .HasColumnType("longtext");

                    b.Property<string>("Origem")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("pendenciasDecisao");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePendenciasQuod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ApontamentoStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("CNPJ")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comarca")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("ContractNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateInclued")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateOcurred")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Forum")
                        .HasColumnType("longtext");

                    b.Property<string>("JusticeType")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Nature")
                        .HasColumnType("longtext");

                    b.Property<string>("ParticipantType")
                        .HasColumnType("longtext");

                    b.Property<string>("PendenciesControlCred")
                        .HasColumnType("longtext");

                    b.Property<string>("ProcessAuthor")
                        .HasColumnType("longtext");

                    b.Property<string>("ProcessNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ProcessType")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<string>("Vara")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("pendenciasQuod");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePergunta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Pergunta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("QuestionarioId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tipopergunta")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionarioId");

                    b.ToTable("Perguntas");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePrincipaisFregueses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("nomeEmpresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeSocio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tempoRelacionamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("PrincipaisFregueses");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePrincipalFornecedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("nomeEmpresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeSocio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("telefone")
                        .HasColumnType("bigint");

                    b.Property<string>("tempoRelacionamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("PrincipaisFornecedores");
                });

            modelBuilder.Entity("CRMAudax.Models.TableProtestosDecisao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Cartorio")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Moeda")
                        .HasColumnType("longtext");

                    b.Property<string>("Uf")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("protestosDecisao");
                });

            modelBuilder.Entity("CRMAudax.Models.TableProtestosQuod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CPFCNPJ")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCartorio")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("protestosQuod");
                });

            modelBuilder.Entity("CRMAudax.Models.TableQuestionario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Questionarios");
                });

            modelBuilder.Entity("CRMAudax.Models.TableQuodScore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CPFCNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataScore")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Score")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("QuodScores");
                });

            modelBuilder.Entity("CRMAudax.Models.TableReferenciaBancaria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("agencia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("conta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("informacoesDesabonadoras")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("instituicaoFinanceira")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeContato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ReferenciaBancarias");
                });

            modelBuilder.Entity("CRMAudax.Models.TableReferenciaComercial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("ligacaoProponente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeReferenciaComercial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("observacoes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ReferenciaComercials");
                });

            modelBuilder.Entity("CRMAudax.Models.TableRegiao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Regioes");
                });

            modelBuilder.Entity("CRMAudax.Models.TableRelacaoBensImoveis", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("cartorio")
                        .HasColumnType("longtext");

                    b.Property<string>("livro")
                        .HasColumnType("longtext");

                    b.Property<string>("localizacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("matricula")
                        .HasColumnType("longtext");

                    b.Property<string>("situacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("RelacoesBensImoveis");
                });

            modelBuilder.Entity("CRMAudax.Models.TableRelatorioVisita", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<long?>("abertura")
                        .HasColumnType("bigint");

                    b.Property<string>("alteracaoContratual")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("amplaConcorrencia")
                        .HasColumnType("bigint");

                    b.Property<long>("apresentacao")
                        .HasColumnType("bigint");

                    b.Property<long?>("carater")
                        .HasColumnType("bigint");

                    b.Property<string>("cargo")
                        .HasColumnType("longtext");

                    b.Property<long?>("certificacaoQUalidade")
                        .HasColumnType("bigint");

                    b.Property<long?>("conhecimentoConcorrencia")
                        .HasColumnType("bigint");

                    b.Property<long?>("conhecimentoNegocio")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("dataVisita")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("edificacao")
                        .HasColumnType("bigint");

                    b.Property<long>("equipamento")
                        .HasColumnType("bigint");

                    b.Property<long?>("estoque")
                        .HasColumnType("bigint");

                    b.Property<string>("formaEntregaProduto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("franqueza")
                        .HasColumnType("bigint");

                    b.Property<long?>("funcionarios")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("fundacao")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("impressaoMidia")
                        .HasColumnType("bigint");

                    b.Property<long>("margemLiquida")
                        .HasColumnType("bigint");

                    b.Property<long?>("materiaPrima")
                        .HasColumnType("bigint");

                    b.Property<long?>("negocioFamiliar")
                        .HasColumnType("bigint");

                    b.Property<string>("nomeEntrevistado")
                        .HasColumnType("longtext");

                    b.Property<string>("nomeIndicacao")
                        .HasColumnType("longtext");

                    b.Property<long>("organizacaoProducao")
                        .HasColumnType("bigint");

                    b.Property<long?>("parqueIndustrial")
                        .HasColumnType("bigint");

                    b.Property<long>("porcentagemCheque")
                        .HasColumnType("bigint");

                    b.Property<long>("porcentagemConsumidorFisica")
                        .HasColumnType("bigint");

                    b.Property<long>("porcentagemConsumidorJuridica")
                        .HasColumnType("bigint");

                    b.Property<long>("porcentagemDuplicata")
                        .HasColumnType("bigint");

                    b.Property<long>("prazoMedioClientes")
                        .HasColumnType("bigint");

                    b.Property<long>("prazoMedioFornecedores")
                        .HasColumnType("bigint");

                    b.Property<long?>("producao")
                        .HasColumnType("bigint");

                    b.Property<string>("regimeTributario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("sazonalidade")
                        .HasColumnType("bigint");

                    b.Property<long?>("tempoCargo")
                        .HasColumnType("bigint");

                    b.Property<long>("ticketMedio")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("RelatoriosVisita");
                });

            modelBuilder.Entity("CRMAudax.Models.TableResposta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("PerguntaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PerguntaId");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("CRMAudax.Models.TableRespostaCedente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("PerguntaId")
                        .HasColumnType("bigint");

                    b.Property<string>("RespostaAberta")
                        .HasColumnType("longtext");

                    b.Property<long?>("RespostaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PerguntaId");

                    b.ToTable("RespostasCedentes");
                });

            modelBuilder.Entity("CRMAudax.Models.TableUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataDelete")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("RegiaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CRMAudax.Models.TableAtividadesCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableAutomoveis", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableCartaoCNPJCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableCliente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableRegiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("RegiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMAudax.Models.TableUsuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CRMAudax.Models.TableComite", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableComprovanteEnderecoCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableContratoSocialCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableCpfRgCnh", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableCustosFixos", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableDecisaoScore", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableEndividamentoCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableEndividamentoSCR", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableEstoque", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableFaturamentoCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableFaturamentoFiscalCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableImpostoRendaCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableMaquinasEquipamentos", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableNFE", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableOperacaoCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableOrdemCartaoKanban", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMAudax.Models.TableColunaKanban", "Coluna")
                        .WithMany()
                        .HasForeignKey("ColunaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Coluna");
                });

            modelBuilder.Entity("CRMAudax.Models.TableOrdemClienteKanban", b =>
                {
                    b.HasOne("CRMAudax.Models.TableColunaKanban", "Coluna")
                        .WithMany()
                        .HasForeignKey("ColunaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coluna");
                });

            modelBuilder.Entity("CRMAudax.Models.TableOrdemColunaKanban", b =>
                {
                    b.HasOne("CRMAudax.Models.TableColunaKanban", "Coluna")
                        .WithMany()
                        .HasForeignKey("ColunaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coluna");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePendenciasDecisao", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePendenciasQuod", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePergunta", b =>
                {
                    b.HasOne("CRMAudax.Models.TableQuestionario", "Questionario")
                        .WithMany()
                        .HasForeignKey("QuestionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionario");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePrincipaisFregueses", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TablePrincipalFornecedor", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableProtestosDecisao", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableProtestosQuod", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableQuodScore", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableReferenciaBancaria", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableReferenciaComercial", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableRelacaoBensImoveis", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableRelatorioVisita", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("CRMAudax.Models.TableResposta", b =>
                {
                    b.HasOne("CRMAudax.Models.TablePergunta", "Pergunta")
                        .WithMany()
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("CRMAudax.Models.TableRespostaCedente", b =>
                {
                    b.HasOne("CRMAudax.Models.TableCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMAudax.Models.TablePergunta", "Pergunta")
                        .WithMany()
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("CRMAudax.Models.TableUsuario", b =>
                {
                    b.HasOne("CRMAudax.Models.TableRegiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("RegiaoId");

                    b.Navigation("Regiao");
                });
#pragma warning restore 612, 618
        }
    }
}
